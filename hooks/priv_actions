#!/bin/php
<?php
/**
 * Intercept privilege (sudo) calls to Hestia's bin/ directory and invoke plugin actions/filters
 * before executing the original command.
 * 
 * @version 1.0.0
 * @license GPL-3.0
 * @link https://github.com/steveorevo/hestiacp-pluginable
 * 
 */

// Check if we've already filtered the arguments and carry on
if ( getenv('HCPPFILTERED') == 'true' ) {
    echo "export HCPPFILTERED=\n";
    exit();
}

require_once( '/usr/local/hestia/web/pluginable.php' );
global $hcpp;

// Remove the first argument, which is the path to the script
$cmd = '';
array_shift( $argv );

// Analyze the arguments
$is_priv = false;
$hst_command = '';
$params = [];
foreach( $argv as $a) {

    // Check for sudo
    if ($a == 'sudo' || $a == '/usr/bin/sudo') {
        $is_priv = true;
    }else{

        // Get the original command name
        if ( strpos( $a, '/usr/local/hestia/bin/' ) !== false ) {
            $hst_command = str_replace( '/usr/local/hestia/bin/', '', $a );
        }else{
            $params[] = $a;
        }
    }
}
if ( $is_priv == false || $hst_command == '' ) return;

// Strip legacy v- prefix from command name and use underscores instead of dashes
$event = $hst_command;
if ( substr( $event, 0, 3 ) == '/v-' ) {
    $event = substr( $event, 3 );
}
if ( substr( $event, 0, 2 ) == 'v-' ) {
    $event = substr( $event, 2 );
}
$event = 'priv_' . str_replace( '-', '_', $event );

// Invoke any plugin actions
if (count( $params ) > 0) {
    $params = $hcpp->do_action( $event, $params );
}else{
    $hcpp->do_action( $event, '' );
}

// Re-invoke with filter flag to indicate we've already processed actions
$cmd = "export HCPPFILTERED=true\n";
$cmd .=  "/usr/local/hestia/bin/$hst_command ";
foreach( $params as $p ) {
    $cmd .= escapeshellarg( $p ) . " ";
}
$cmd .= "\nexit\n";
echo $cmd;